version: '3.8'

services:
  # Frontend Services
  nextapp-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.pnpm-store
      - /app/.next
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:8080
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      VITE_DEV_SERVER_HOST: "0.0.0.0"
      VITE_DEV_SERVER_PORT: "3000"
    depends_on:
      - backend
    networks:
      - app-network
    tty: true
    stdin_open: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: frontend/package.json

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/tmp
    environment:
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET:-development-jwt-secret-key-123}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_NAME: ${POSTGRES_DB:-auraspeak}
      ALLOWED_ORIGINS: http://localhost:3000
      GO_ENV: development
    depends_on:
      - postgres
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
        - action: rebuild
          path: backend/go.mod

  # Database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-auraspeak}
    networks:
      - app-network

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
