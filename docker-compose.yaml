services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    working_dir: /app
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - db
    command: air
    environment:
      - CGO_ENABLED=1
    # Falls du SQLite nutzt, brauchst du ggf. build flags oder libsqlite3-dev

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    working_dir: /app
    command: npm run dev

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5433:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  migrate:
    image: migrate/migrate
    depends_on:
      - db
    volumes:
      - ./migrations:/migrations
    entrypoint: ["/bin/sh", "-c"]
    command: >
      migrate -path=/migrations
              -database=postgres://postgres:password@db:5432/mydb?sslmode=disable
              up 2>/dev/null || echo 'No migration needed'

volumes:
  dbdata:
