services:
  nextapp-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: nextapp-dev
    command: pnpm dev
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /app/node_modules    # prevent host from overwriting container install
      - next-cache:/app/.next
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connect_timeout=300
    depends_on:
      - postgres
      - redis
    networks:
      - voice-net

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - voice-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - voice-net

  redis:
    image: redis:6
    container_name: redis
    restart: always
    networks:
      - voice-net

  glitchtip:
    image: glitchtip/glitchtip
    container_name: glitchtip
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
      ENABLE_OPEN_USER_REGISTRATION: ${ENABLE_OPEN_USER_REGISTRATION}
      GLITCHTIP_DOMAIN: http://localhost:8000
      PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - glitchtip-data:/code/data
    depends_on:
      - postgres
      - redis
    networks:
      - voice-net

  glitchtip-worker:
    image: glitchtip/glitchtip
    container_name: glitchtip-worker
    command: ["celery", "-A", "glitchtip", "worker", "-l", "INFO"]
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - voice-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - voice-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "4000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - voice-net

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    networks:
      - voice-net

networks:
  voice-net:
    driver: bridge

volumes:
  next-cache:
  postgres-data:
  pgadmin-data:
  glitchtip-data:
  grafana-data:
  prometheus-data:
  loki-data:
